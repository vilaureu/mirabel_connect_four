name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    outputs:
      mirabel_rs: ${{ steps.mirabel_rs.outputs.rev }}
    steps:
      - uses: actions/checkout@v3
        id: checkout
      - name: Install dependencies
        id: dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            ~/.cargo/.*
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Build (only for surena)
        run: cargo build --no-default-features --verbose
      - uses: actions/upload-artifact@v3
        with:
          path: target/debug/libmirabel_connect_four.so
      - uses: actions/upload-artifact@v3
        with:
          path: test_surena.sh
      - name: Install cargo-lock
        run: cargo install cargo-lock --version=8.0.3 --features=cli
      # find out mirabel_rs commit hash via cargo-lock
      - name: Get mirabel_rs revision
        id: mirabel_rs
        run: >-
          echo "rev=$(cargo lock --sources --package mirabel | sed -rn
          's/^.+rev=([a-f0-9]+)#\1\)$/\1/p')" | tee -a -- "$GITHUB_OUTPUT"
      - name: Test
        timeout-minutes: 5
        run: cargo test --verbose
      - name: Clippy
        if: "!cancelled() && steps.dependencies.outcome == 'success'"
        run: cargo clippy --no-deps -- --deny=warnings
      - name: Clippy (no default features)
        if: "!cancelled() && steps.dependencies.outcome == 'success'"
        run: cargo clippy --no-deps --no-default-features -- --deny=warnings
      - name: Check formatting
        if: "!cancelled() && steps.checkout.outcome == 'success'"
        run: cargo fmt --check

  surena:
    name: Surena integration test
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: vilaureu/mirabel_rs
          ref: ${{ needs.build.outputs.mirabel_rs }}
          submodules: recursive
      - name: Get surena commit
        id: get-surena
        # purge cache on submodule update
        run: echo "commit=$(git rev-parse HEAD)" | tee -a -- "$GITHUB_OUTPUT"
        working-directory: mirabel/lib/surena
      - uses: actions/cache@v3
        id: cache
        with:
          path: build/
          key: ${{ runner.os }}-surena-${{ steps.get-surena.outputs.commit }}
      - name: Touch build to prevent CMake from recompiling
        if: steps.cache.outputs.cache-hit == 'true'
        run: find build -exec touch {} +
      - uses: actions/download-artifact@v3
        with:
          name: artifact
      - name: Make downloaded artifact files executable
        run: chmod +x libmirabel_connect_four.so test_surena.sh
      - name: Configure
        # GCC-9 crashes when compiling surena
        run: >-
          cmake -S mirabel/lib/surena -B build -DCMAKE_BUILD_TYPE=Debug
          -DCMAKE_C_COMPILER=/usr/bin/gcc-10
          -DCMAKE_CXX_COMPILER=/usr/bin/g++-10
      - name: Build
        run: cmake --build build
      - name: Test
        timeout-minutes: 5
        run: ./test_surena.sh ./build/surena ./libmirabel_connect_four.so
